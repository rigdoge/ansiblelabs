---
- name: Install Nginx Monitoring
  hosts: nginx
  become: yes
  roles:
    - nginx-exporter
    - role: prometheus
      tags: ['prometheus']
      vars:
        prometheus_targets:
          - name: nginx
            targets:
              - localhost:9113
        prometheus_rules:
          - nginx.rules.yml

- hosts: all
  become: yes
  roles:
    - nginx-exporter

  pre_tasks:
    - name: Ensure yq is installed
      apt:
        name: yq
        state: present
      when: ansible_os_family == "Debian"

  tasks:
    # 使用 yq 检查配置
    - name: Check if Nginx scrape config exists
      shell: |
        yq eval '.scrape_configs[] | select(.job_name == "nginx")' /etc/prometheus/prometheus.yml
      register: nginx_config_exists
      changed_when: false
      failed_when: false

    # 备份原始配置
    - name: Backup Prometheus config
      copy:
        src: /etc/prometheus/prometheus.yml
        dest: /etc/prometheus/prometheus.yml.bak
        remote_src: yes
      when: nginx_config_exists.stdout == ""

    # 使用 template 模块添加 Nginx 配置
    - name: Add Nginx scrape config to Prometheus
      template:
        src: roles/prometheus/templates/prometheus.yml.j2
        dest: /etc/prometheus/prometheus.yml
        validate: promtool check config %s
      notify: restart prometheus

    # 添加 Nginx 告警规则
    - name: Add Nginx alert rules
      copy:
        src: roles/prometheus/templates/nginx.rules.yml
        dest: /etc/prometheus/nginx.rules.yml
      notify: restart prometheus

    # 检查 Grafana 是否准备就绪
    - name: Wait for Grafana to be ready
      uri:
        url: "http://localhost:3000/api/health"
        method: GET
        status_code: 200
      register: grafana_health
      retries: 12
      delay: 5
      until: grafana_health.status == 200
      ignore_errors: yes

    # 导入 Nginx Grafana 仪表盘
    - name: Import Nginx dashboard to Grafana
      uri:
        url: "http://localhost:3000/api/dashboards/db"
        method: POST
        user: admin
        password: "{{ grafana_admin_password | default('grafana') }}"
        force_basic_auth: yes
        body_format: json
        body:
          dashboard: "{{ lookup('file', 'roles/grafana/templates/dashboards/nginx.json.j2') | from_json }}"
          overwrite: true
          message: "Updated by Ansible"
          folderId: 0
        status_code: 200
        headers:
          Content-Type: "application/json"
      register: dashboard_import
      ignore_errors: yes

    - name: Debug dashboard import
      debug:
        var: dashboard_import
      when: dashboard_import.failed is defined

  handlers:
    - name: restart prometheus
      systemd:
        name: prometheus
        state: restarted
        daemon_reload: yes

    - name: validate prometheus config
      command: promtool check config /etc/prometheus/prometheus.yml
      listen: restart prometheus 