---
# 检查系统信息
- name: Get OS information
  debug:
    msg: 
      - "Distribution: {{ ansible_distribution }}"
      - "Version: {{ ansible_distribution_version }}"
      - "Architecture: {{ ansible_architecture }}"

# 安装依赖包
- name: Install dependencies
  apt:
    name:
      - gnupg2
      - curl
      - software-properties-common
      - lsb-release
      - wget
      - apt-transport-https
      - python3-mysqldb
      - python3-pymysql
    state: present
    update_cache: yes

# 下载 Percona 仓库包
- name: Download Percona repository package
  get_url:
    url: "https://repo.percona.com/apt/percona-release_latest.{{ ansible_distribution_release }}_all.deb"
    dest: "/tmp/percona-release.deb"
  register: repo_download

# 安装 Percona 仓库包
- name: Install Percona repository package
  apt:
    deb: "/tmp/percona-release.deb"
    state: present
  when: repo_download is success
  register: repo_install

# 启用 Percona Server 8.0 仓库
- name: Enable Percona Server 8.0 repository
  command: percona-release enable ps-80
  when: repo_install is success
  register: repo_enable

# 更新 APT 缓存
- name: Update apt cache
  apt:
    update_cache: yes
  when: repo_enable is success

# 安装 Percona Server
- name: Install Percona Server
  apt:
    name:
      - percona-server-server
      - percona-server-client
      - percona-server-common
      - percona-toolkit
    state: present
    update_cache: yes
  notify: restart mysql

# 配置 MySQL
- name: Create MySQL configuration file
  template:
    src: my.cnf.j2
    dest: /etc/mysql/my.cnf
    owner: root
    group: root
    mode: '0644'
  notify: restart mysql

# 确保 MySQL 服务运行
- name: Ensure MySQL is running and enabled
  systemd:
    name: mysql
    state: started
    enabled: yes

# 设置 root 密码
- name: Set MySQL root password
  mysql_user:
    name: root
    host: localhost
    password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    state: present
  ignore_errors: yes

# 创建监控用户
- name: Create MySQL monitoring user
  mysql_user:
    name: "{{ mysql_exporter_user }}"
    host: localhost
    password: "{{ mysql_exporter_password }}"
    priv: "*.*:PROCESS,REPLICATION CLIENT,SELECT"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
  notify: restart mysql_exporter

# 设置 MySQL Exporter 架构变量
- name: Set MySQL Exporter architecture
  set_fact:
    mysql_exporter_arch: >-
      {% if ansible_architecture == 'aarch64' %}arm64
      {% elif ansible_architecture == 'x86_64' %}amd64
      {% else %}{{ ansible_architecture }}
      {% endif %}

# 安装 MySQL Exporter
- name: Download and install MySQL Exporter
  unarchive:
    src: "https://github.com/prometheus/mysqld_exporter/releases/download/v{{ mysql_exporter_version }}/mysqld_exporter-{{ mysql_exporter_version }}.linux-{{ mysql_exporter_arch }}.tar.gz"
    dest: /usr/local/bin
    remote_src: yes
    extra_opts:
      - --strip-components=1
      - --wildcards
      - '*/mysqld_exporter'
    mode: '0755'
  notify: restart mysql_exporter

# 创建 MySQL Exporter 服务
- name: Create MySQL Exporter systemd service
  template:
    src: mysql_exporter.service.j2
    dest: /etc/systemd/system/mysql_exporter.service
    mode: '0644'
  notify: restart mysql_exporter

# 确保 MySQL Exporter 运行
- name: Ensure MySQL Exporter is running and enabled
  systemd:
    name: mysql_exporter
    state: started
    enabled: yes
    daemon_reload: yes 