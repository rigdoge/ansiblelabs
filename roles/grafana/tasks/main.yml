---
- name: Add Grafana GPG key
  apt_key:
    url: https://apt.grafana.com/gpg.key
    state: present

- name: Add Grafana repository
  apt_repository:
    repo: "deb https://apt.grafana.com stable main"
    state: present
    filename: grafana

- name: Install Grafana
  apt:
    name: grafana
    state: present
    update_cache: yes

# 配置 Grafana 初始密码
- name: Configure Grafana admin password
  lineinfile:
    path: /etc/grafana/grafana.ini
    regexp: "^;?admin_password = "
    line: "admin_password = {{ grafana_admin_password | default('grafana') }}"
    backup: yes
  notify: restart grafana

- name: Start and enable Grafana
  systemd:
    name: grafana-server
    state: started
    enabled: yes
    daemon_reload: yes

# 等待 Grafana 启动
- name: Wait for Grafana to start
  wait_for:
    port: 3000
    timeout: 120

# 等待 Grafana API 可用
- name: Wait for Grafana API to be ready
  uri:
    url: "http://localhost:3000/api/health"
    method: GET
  register: result
  until: result.status == 200
  retries: 24
  delay: 5

# 安装 grafana-cli 工具
- name: Install grafana-cli tools
  apt:
    name: python3-requests
    state: present

# 配置数据源
- name: Configure Prometheus datasource
  uri:
    url: "http://localhost:3000/api/datasources"
    method: POST
    user: admin
    password: "{{ grafana_admin_password | default('grafana') }}"
    force_basic_auth: yes
    body_format: json
    body:
      name: "Prometheus"
      type: "prometheus"
      url: "http://localhost:9090"
      access: "proxy"
      isDefault: true
    status_code: [200, 409]  # 409 表示数据源已存在
    headers:
      Content-Type: "application/json"
  register: result
  until: result.status in [200, 409]
  retries: 6
  delay: 10

# 导入 Nginx 仪表盘
- name: Import Nginx dashboard
  uri:
    url: "http://localhost:3000/api/dashboards/db"
    method: POST
    user: admin
    password: "{{ grafana_admin_password | default('grafana') }}"
    force_basic_auth: yes
    body_format: json
    body:
      dashboard: "{{ lookup('file', 'templates/dashboards/nginx.json.j2') | from_json }}"
      overwrite: true
      message: "Updated by Ansible"
    status_code: 200
    headers:
      Content-Type: "application/json"
  register: result
  until: result.status == 200
  retries: 3
  delay: 5

# 导入 PHP-FPM 仪表盘
- name: Import PHP-FPM dashboard
  uri:
    url: "http://localhost:3000/api/dashboards/db"
    method: POST
    user: admin
    password: "{{ grafana_admin_password | default('grafana') }}"
    force_basic_auth: yes
    body_format: json
    body:
      dashboard: "{{ lookup('file', 'templates/dashboards/php-fpm.json.j2') | from_json }}"
      overwrite: true
      message: "Updated by Ansible"
    status_code: 200
    headers:
      Content-Type: "application/json"
  register: result
  until: result.status == 200
  retries: 3
  delay: 5 