---
# 安装基础依赖
- name: Install required packages
  apt:
    name:
      - curl
      - gnupg
      - apt-transport-https
    state: present

# 添加 RabbitMQ 团队的 Erlang 仓库
- name: Add RabbitMQ Team Erlang repository key
  shell: |
    curl -1sLf "https://dl.cloudsmith.io/public/rabbitmq/rabbitmq-erlang/gpg.E495BB49CC4BBE5B.key" | gpg --dearmor > /usr/share/keyrings/rabbitmq-erlang.gpg
    chmod 644 /usr/share/keyrings/rabbitmq-erlang.gpg
  args:
    creates: /usr/share/keyrings/rabbitmq-erlang.gpg

- name: Add RabbitMQ Team Erlang repository
  apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/rabbitmq-erlang.gpg] https://dl.cloudsmith.io/public/rabbitmq/rabbitmq-erlang/deb/ubuntu {{ ansible_distribution_release }} main"
    state: present
    filename: rabbitmq-erlang
    update_cache: yes

# 添加 RabbitMQ 仓库
- name: Add RabbitMQ repository key
  shell: |
    curl -1sLf "https://dl.cloudsmith.io/public/rabbitmq/rabbitmq-server/gpg.9F4587F226208342.key" | gpg --dearmor > /usr/share/keyrings/rabbitmq.gpg
    chmod 644 /usr/share/keyrings/rabbitmq.gpg
  args:
    creates: /usr/share/keyrings/rabbitmq.gpg

- name: Add RabbitMQ repository
  apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/rabbitmq.gpg] https://dl.cloudsmith.io/public/rabbitmq/rabbitmq-server/deb/ubuntu {{ ansible_distribution_release }} main"
    state: present
    filename: rabbitmq
    update_cache: yes

# 更新包缓存
- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600

# 安装 Erlang 和 RabbitMQ
- name: Install Erlang
  apt:
    name: erlang
    state: present
    update_cache: yes
  register: erlang_install_result

- name: Install RabbitMQ Server
  apt:
    name: "rabbitmq-server={{ rabbitmq_version }}-1"
    state: present
    update_cache: yes
  register: rabbitmq_install_result
  when: erlang_install_result is success

- name: Display Erlang version
  command: dpkg -l | grep erlang
  register: erlang_version_check
  changed_when: false
  when: rabbitmq_install_result is success

- name: Show installed Erlang version
  debug:
    var: erlang_version_check.stdout_lines
  when: erlang_version_check is defined

# 启用管理插件
- name: Enable RabbitMQ plugins
  rabbitmq_plugin:
    names: rabbitmq_management
    state: enabled
  notify: restart rabbitmq-server

# 确保 RabbitMQ 已启动并启用
- name: Ensure RabbitMQ is started and enabled
  systemd:
    name: rabbitmq-server
    state: started
    enabled: yes

# 配置 RabbitMQ
- name: Create RabbitMQ configuration directory
  file:
    path: /etc/rabbitmq
    state: directory
    mode: '0755'

- name: Configure RabbitMQ
  template:
    src: rabbitmq.conf.j2
    dest: /etc/rabbitmq/rabbitmq.conf
    mode: '0644'
  notify: restart rabbitmq

- name: Configure RabbitMQ environment
  template:
    src: rabbitmq-env.conf.j2
    dest: /etc/rabbitmq/rabbitmq-env.conf
    mode: '0644'
  notify: restart rabbitmq

# 创建管理员用户
- name: Create admin user
  rabbitmq_user:
    user: "{{ rabbitmq_admin_user }}"
    password: "{{ rabbitmq_admin_password }}"
    tags: administrator
    vhost: /
    configure_priv: .*
    read_priv: .*
    write_priv: .*
    state: present

# 删除默认 guest 用户
- name: Remove default guest user
  rabbitmq_user:
    user: guest
    state: absent

# 配置 RabbitMQ Exporter 服务
- name: Configure RabbitMQ Exporter service
  template:
    src: rabbitmq-exporter.service.j2
    dest: /etc/systemd/system/rabbitmq-exporter.service
    mode: '0644'
  notify: restart rabbitmq-exporter

# 启动并启用服务
- name: Start and enable RabbitMQ service
  systemd:
    name: rabbitmq-server
    state: started
    enabled: yes
    daemon_reload: yes

- name: Start and enable RabbitMQ Exporter service
  systemd:
    name: rabbitmq-exporter
    state: started
    enabled: yes
    daemon_reload: yes

# 配置 Prometheus 告警规则
- name: Configure RabbitMQ Prometheus alert rules
  template:
    src: rabbitmq.rules.yml.j2
    dest: /etc/prometheus/rabbitmq.rules.yml
    mode: '0644'
  notify: reload prometheus 